<?php

declare (strict_types=1);
namespace UserService\Application\GraphQL\Resolver\User;

use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Resolver\ResolverInterface;
use UserService\Application\GraphQL\Context;
use UserService\Application\GraphQL\Mapper\UserFeatureFlagsMapper;
use UserService\Application\GraphQL\Model\UserType;
use UserService\Application\GraphQL\Model\UserFeatureFlagType;
use UserService\Domain\UseCase\UserFeatureFlagUseCase;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * This is resolver for User.UserFeatureFlags
 */
final readonly class UserFeatureFlagsResolver implements ResolverInterface
{
    public function __construct(
        private UserFeatureFlagUseCase $useCase
    )
    {
    }

    /**
     * @param UserType $rootValue
     * @param $args
     * @param Context $context
     * @param ResolveInfo $info
     * @return UserFeatureFlagType[]|\Generator
     */
    public function __invoke($rootValue, $args, $context, ResolveInfo $info): \Generator
    {
        $flags = $this->useCase->findByUserId($rootValue->id);
        return UserFeatureFlagsMapper::map($flags);
    }
}