<?php

declare (strict_types=1);
namespace UserService\Application\GraphQL\Representation;

use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Representation;
use Axtiva\FlexibleGraphql\Resolver\FederationRepresentationResolverInterface;
use GraphqlApp\Application\GraphQL\Mapper\ProfileMapper;
use UserService\Application\GraphQL\Model\ProfileType;
use UserService\Domain\UseCase\ProfileUseCase;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * Representation resolver for federated graphql type Profile
 */
final readonly class ProfileRepresentation implements FederationRepresentationResolverInterface
{
    public function __construct(
        private ProfileUseCase $useCase,
    )
    {
    }

    public function getTypeName(): string
    {
        return 'Profile';
    }

    public function __invoke(Representation $representation, $context, ResolveInfo $info): ?ProfileType
    {
        return ProfileMapper::map(
            $this->useCase->findById($representation->getFields()['id'])
        );
    }
}